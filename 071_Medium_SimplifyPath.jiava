/*
Given an absolute path for a file (Unix-style), simplify it.

For example,
path = "/home/", => "/home"
path = "/a/./b/../../c/", => "/c"
click to show corner cases.

Corner Cases:
Did you consider the case where path = "/../"?
In this case, you should return "/".
Another corner case is the path might contain multiple slashes '/' together, such as "/home//foo/".
In this case, you should ignore redundant slashes and return "/home/foo".
*/

public class Solution {
    public String simplifyPath(String path) {
        String [] arr = path.split("/");
        List<String> tmp = new ArrayList<>();
        for(String p:arr){
            if(p.length() == 0 || p.equals(".")){
                continue;
            }
            else if(p.equals("..")){
                if(tmp.size() > 0){
                    tmp.remove(tmp.size()-1);
                }
            }
            else{
                tmp.add(p);
            }
        }
        
        StringBuilder sb = new StringBuilder();
        sb.append("/");
        for(int i = 0;i < tmp.size();i++){
            sb.append(tmp.get(i));
            if(i != tmp.size()-1){
                sb.append("/");
            }
        }
        return sb.toString();
    }
}
